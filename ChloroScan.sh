#!/bin/bash
# This file writes a new configuration yaml file for each batch, and send them into the snakemake workflow.
# Can be customized to write any parameters you want.

set -e

# NOTE: every path should be in relative path.
Help()
{
    echo "ChloroScan Synatx: bash ChloroScan.sh [-h|a|b|c|d|m|n|k|p|t|f]"
    echo 
    echo "-h        Print help message."
    echo "-a        Absolute path to contig assembly in fasta format."
    echo "-b        Name of Batch, used to name the output directory."
    echo "-c        Absolute path to the directory of ChloroScan."
    echo "-d        Absolute path to the tab-separated depth profile for assembly, can be automatically generated by binny."
    echo "-m        Absolute path to the bam file(s) used for binning."
    echo "-n        Minimum length cutoff of contigs for corgi (default: 128)."
    echo "-k        Batch size for corgi to process contigs (default: 1)."
    echo "-p        Probability threshold for corgi to determine the identity of contigs (default: 0)."
    echo "-t        Number of cores provided for the workflow to run."
    echo "-f        Absolute path to your snakefile." 
}

while getopts ":ha:b:c:d:e:m:n:k:p:t:f:" option
do 
    case $option in
        h) 
            Help
            exit;;
        a) 
            assembly=$OPTARG;;
        b)
            batch_name=$OPTARG;;
        c)
            CHLOROSCAN_DIR=$OPTARG;;
        d)
            depth_file=$OPTARG;;
        m) 
            alignment=$OPTARG;;
        n) 
            min_length_corgi=$OPTARG;;
        k) 
            corgi_batch_size=$OPTARG;;
        p) 
            p_threshold=$OPTARG;;
        t) 
            threads=$OPTARG;;
        f) 
            snakefile=$OPTARG;;
        :) 
            echo "Options required.";;
    esac
done 

# A reminder: MUST add quotation for assembly, alignment and batch_name, they may interact with the opts. 
# Should change the parsing type.

echo "Assembly provided: $assembly"
echo "Batch_name provided: $batch_name"
echo "CHLOROSCAN directory: $CHLOROSCAN_DIR"
echo "depth file provided: $depth_file"
echo "alignment bam files provided: $alignment"

# batch_name is used to name the output directory.
mkdir -p $batch_name
# Here the config file is a representative, you have to get the absolute path!
input_config="config/config.running.yaml"
default_taxonomy_dump="names.dmp"

cp $CHLOROSCAN_DIR/config/config.zero.yaml config/config.running.yaml
echo "min length is $min_length_corgi"
echo "corgi batch size is $corgi_batch_size"
echo "Probability threshold of CORGI determination: $p_threshold"
echo "Threads provided: $threads"
echo "Snake file path: $snakefile"
# Now change some settings in relation to the config file.
# Note: all path should be relative path.
# ----------------------------------------------------------------------------
sed -i "s@assembly_path: \"\"@assembly_path: \"$assembly\"@g" $input_config
awk "/assembly_path/" $input_config

sed -i "s@alignment_files: \"\"@alignment_files: \"$alignment\"@g" $input_config
awk "/alignment_files/" $input_config

if [ ! -z $depth_file ]
then
    sed -i "s@depth_text: \"\"@depth_text: \"$depth_file\"@g" $input_config
    awk "/depth_text:/" $input_config
else
    echo "No depth text file provided, binny will generate one."
fi

sed -i "s@outputdir: \"chloroscan_outputs\"@outputdir: \"$batch_name\"@g" $input_config
awk "/outputdir:/" $input_config

sed -i "s@batch_name: \"\"@batch_name: \"$batch_name\"@g" $input_config
awk "/batch_name/" $input_config

sed -i "s@minlen: @minlen: $min_length_corgi@g" $input_config
awk "/minlen/" $input_config

sed -i "s@batch_size: @batch_size: $corgi_batch_size@g" $input_config
awk "/batch_size/" $input_config

# write CAT database to config.

sed -i "s@CAT_database: \"\"@CAT_database: \"$default_CAT_DB\"@g" $input_config
awk "/CAT_database/" $input_config

# save taxonomy dump.
sed -i "s@taxonomy_names: \"\"@taxonomy_names: \"$default_taxonomy_dump\"@g" $input_config
awk "/taxonomy_names/" $input_config

sed -i "s@pthreshold: @pthreshold: $p_threshold@g" $input_config
awk "/pthreshold/" $input_config

sed -i "s@threads: @threads: $threads@g" $input_config
awk "/threads/" $input_config

# # We only need to initiate the snakemake workflow by default.

CHLOROSCAN_WD="."
echo $CHLOROSCAN_WD > cwd.txt
echo $(pwd) >> cwd.txt
# # At here, the cwd directory has changed to within tmp.

snakemake -c $threads --latency-wait 15 --use-conda --configfile $input_config \
    --snakefile $snakefile --dryrun \
    --conda-prefix /data/MMA_organelle_metagenomics/conda \
    --conda-frontend mamba --directory=$CHLOROSCAN_WD

output_dir=$batch_name
cp $input_config $output_dir


# # remember always remove it after workflow done. 
# rm $input_config